# Create simple express server to answer requests (for testing)
# Follow step for nginx/node with socket.io chat app
# Try to install nginx and not run it through docker
# Focus on the socket.io thing
# then, if it works, reproduce with db-api, if it doesn't work, check api res statement...

user  nginx;
worker_processes  1;
events {
  worker_connections  1024;
}
error_log /var/log/nginx/error.log warn;
http {
  include       /etc/nginx/mime.types;
  log_format    main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
  access_log    /var/log/nginx/access.log  main;
  sendfile      on;
  keepalive_timeout   500;

  server {
    listen        8080;
    server_name   localhost;

    location / {
      root          /usr/share/nginx/html;
      index         index.html;
    }
    location /db {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;

      proxy_pass http://127.0.0.1:3000;
    }
    # location /easyrtc {
    #   proxy_pass                        http://localhost:8000;
    # }
    # location /socket.io {
    #   proxy_pass                        http://localhost:8000/easyrtc;
    # }
  }
}
# stream {
#   upstream db_api {
#     server 127.0.0.1:3000;
#   }

#   server {
#     listen 3000     proxy_protocol;

#     proxy_pass      db_api;
#     proxy_protocol  on;
#   }
#   server {
#     listen 8000     proxy_protocol;

#     proxy_pass      127.0.0.1:8000;
#     proxy_protocol  on;
#   }
# }
