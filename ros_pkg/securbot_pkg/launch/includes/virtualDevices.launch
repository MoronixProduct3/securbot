<!--
    Launches the map video generator on a virtual webcam
    Uses v4l2loopback linux kernel module to instantiate virtual camera
-->

<launch>
    <!-- The nodes to draw the image from -->
    <arg name="input_occupancy_grid_topic" default="/rtabmap/grid_map"/>
    <arg name="input_global_path_topic" default="/planner/move_base/NavfnROS/plan"/>
    <arg name="input_goal_topic" default="/planner_goal"/>
    <arg name="input_laser_scan_topic" default="/scan"/>

    <!-- What needs to be drawn -->
    <arg name="draw_occupancy_grid_param" default="true"/>
    <arg name="draw_global_path_param" default="true"/>
    <arg name="draw_robot_param" default="true"/>
    <arg name="draw_goal_param" default="true"/>
    <arg name="draw_laser_scan_param" default="true"/>

    <!-- The node onto which the generated image will be publish -->
    <arg name="output_map_image_topic" default="/map_image_generator/image"/>

    <!-- Goals -->
    <arg name="input_map_image_goal_topic" default="/map_image_generator/input_goal"/>
    <arg name="output_goal_topic" default="/map_image_generator/output_goal"/>

    <!-- Labels -->
    <arg name="input_map_labels_topic" default="/rtabmap/labels"/>
    <arg name="output_map_image_labels_topic" default="/map_image_generator/labels"/>
    <arg name="rtabmap_list_label_service" default="/rtabmap/list_labels"/>

    <!-- Parameters used to generate the image (resize and position) -->
    <arg name="refresh_rate_param" default="1.0"/>
    <arg name="resolution_param" default="16"/>
    <arg name="width_param" default="150"/>
    <arg name="height_param" default="$(arg width_param)"/>
    <arg name="x_origin_param" default="$(eval arg('resolution_param') * arg('width_param') / 2)"/>
    <arg name="y_origin_param" default="$(eval arg('resolution_param') * arg('height_param') / 2)"/>
    <arg name="robot_frame_param" default="base_footprint"/>

    <!-- Virtual Map dimension for the virtual map -->
    <arg name="image_width_param" default="$(eval arg('x_origin_param') *  2)"/>
    <arg name="image_height_param" default="$(eval arg('y_origin_param') *  2)"/>

    <!-- Colors -->
    <arg name="wall_color_param" default="0 0 0"/> <!-- 0 0 0 -->
    <arg name="free_space_color_param" default="255 255 255"/> <!-- 255 255 255 -->
    <arg name="unknown_space_color_param" default="175 175 175"/> <!-- 175 175 175 -->
    <arg name="global_path_color_param" default="0 255 0 255"/> <!-- 0 255 0 255 -->
    <arg name="robot_color_param" default="0 0 255 255"/> <!-- 0 0 255 255 -->
    <arg name="goal_color_param" default="0 175 0 255"/> <!-- 0 175 0 255 -->
    <arg name="laser_scan_color_param" default="255 0 0 255"/> <!-- 255 0 0 255 -->

    <!-- Sizes -->
    <arg name="global_path_thickness_param" default="3"/> <!-- 3 -->
    <arg name="robot_size_param" default="30"/> <!-- 30 -->
    <arg name="goal_size_param" default="20"/> <!-- 20 -->
    <arg name="laser_scan_size_param" default="6"/> <!-- 6 -->

    <!-- Kernel Modules -->
    <!-- <node pkg="securbot_pkg" type="virtualDevices.bash" name="v4l2_map"></node> -->

    <!-- Camera virtual device -->
    <node pkg="image_capture" type="virtualcam_node" name="virtual_Camera" output="screen">
        <param name="image_topic" value="/camera/rgb/image_rect_color" />
        <param name="virtual_dev" value="/dev/video4" />
        <param name="image_width" value="640"/>
        <param name="image_height" value="360"/>
    </node>

    <!-- Map virtual device -->
    <!-- Image to video -->
    <node pkg="image_capture" type="virtualcam_node" name="virtual_Map" output="screen">
        <param name="image_topic" value="/map_image_generator/image"/>
        <param name="virtual_dev" value="/dev/video5" />
        <param name="image_width" type="int" value="600"/>
        <param name="image_height" type="int" value="600"/>
    </node>

    <!-- Map Image Generator and its parameters -->
    <node name="map_image_generator" pkg="map_image_generator" type="map_image_generator" output="screen">
        <!-- The nodes to draw the image from -->
        <remap from="occupancy_grid" to="$(arg input_occupancy_grid_topic)"/>
        <remap from="global_path" to="$(arg input_global_path_topic)"/>
        <remap from="input_goal" to="$(arg input_goal_topic)"/>
        <remap from="laser_scan" to="$(arg input_laser_scan_topic)"/>

        <!-- What needs to be drawn -->
        <param name="draw_occupancy_grid" type="bool" value="$(arg draw_occupancy_grid_param)"/>
        <param name="draw_global_path" type="bool" value="$(arg draw_global_path_param)"/>
        <param name="draw_robot" type="bool" value="$(arg draw_robot_param)"/>
        <param name="draw_goal" type="bool" value="$(arg draw_goal_param)"/>
        <param name="draw_laser_scan" type="bool" value="$(arg draw_laser_scan_param)"/>

        <!-- The node onto which the generated image will be publish -->
        <remap from="map_image" to="$(arg output_map_image_topic)"/>

        <!-- Goals -->
        <remap from="map_image_goal" to="$(arg input_map_image_goal_topic)"/>
        <remap from="output_goal" to="$(arg output_goal_topic)"/>

        <!-- Labels -->
        <remap from="map_labels" to="$(arg input_map_labels_topic)"/>
        <remap from="map_image_labels" to="$(arg output_map_image_labels_topic)"/>
        <remap from="rtabmap_list_label_service" to="$(arg rtabmap_list_label_service)"/>

        <!-- Parameters used to generate the image (resize and position) -->
        <param name="refresh_rate" type="double" value="$(arg refresh_rate_param)"/>
        <param name="resolution" type="int" value="$(arg resolution_param)"/>
        <param name="width" type="int" value="$(arg width_param)"/>
        <param name="height" type="int" value="$(arg height_param)"/>
        <param name="x_origin" type="int" value="$(arg x_origin_param)"/>
        <param name="y_origin" type="int" value="$(arg y_origin_param)"/>
        <param name="robot_frame" type="string" value="$(arg robot_frame_param)"/>

        <!-- Colors -->
        <param name="wall_color" type="string" value="$(arg wall_color_param)"/>
        <param name="free_space_color" type="string" value="$(arg free_space_color_param)"/>
        <param name="unknown_space_color" type="string" value="$(arg unknown_space_color_param)"/>
        <param name="global_path_color" type="string" value="$(arg global_path_color_param)"/>
        <param name="robot_color" type="string" value="$(arg robot_color_param)"/>
        <param name="goal_color" type="string" value="$(arg goal_color_param)"/>
        <param name="laser_scan_color" type="string" value="$(arg laser_scan_color_param)"/>

        <!-- Sizes -->
        <param name="global_path_thickness" type="int" value="$(arg global_path_thickness_param)"/>
        <param name="robot_size" type="int" value="$(arg robot_size_param)"/>
        <param name="goal_size" type="int" value="$(arg goal_size_param)"/>
        <param name="laser_scan_size" type="int" value="$(arg laser_scan_size_param)"/>
    </node>
</launch>
